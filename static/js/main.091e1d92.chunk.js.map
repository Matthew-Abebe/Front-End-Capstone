{"version":3,"sources":["components/home.js","components/authentication/register.js","components/authentication/login.js","modules/dbCalls.js","components/products/productList.js","components/products/newProductForm.js","components/products/productDetails.js","components/products/productEditForm.js","components/leads/leadList.js","components/leads/newLeadForm.js","components/leads/leadDetails.js","components/leads/leadEditForm.js","components/sales/salesList.js","components/sales/salesDetails.js","components/sales/salesEditForm.js","components/opportunities/opportunities.js","components/applicationViews.js","components/navigation/navigation.js","components/project.js","index.js"],"names":["Home","react_default","a","createElement","Jumbotron","className","Button","tag","href","color","size","onClick","sessionStorage","clear","Component","Register","state","user_name","user_email","user_password","handleFieldChange","evt","stateToChange","target","id","value","console","log","_this","setState","handleRegister","newUser","email","password","props","addUser","then","history","push","setItem","alert","concat","Fragment","Input","type","required","onChange","this","placeholder","Login","handleLogin","allUsers","users","inputUserName","inputPassword","matchUser","find","user","preventDefault","window","remoteURL","dbCalls","_getUser$getProduct$g","getUser","fetch","e","json","getProduct","getLead","getSale","getAllUsers","getAllProducts","getAllLeads","getUserProducts","getAllPurchases","getAllSales","getUserPurchases","sessionId","getItem","Object","defineProperty","method","headers","Content-Type","body","JSON","stringify","newProduct","newLead","newPurchaseTicket","newSale","editedProduct","editedLead","editedPurchase","editedDriveTicket","editedSale","ProductList","handleClick","products","map","product","key","Card","inverse","style","backgroundColor","borderColor","CardTitle","productName","react_router_dom","to","NewProductForm","userId","productPrice","productVendor","productDescription","constructNewProduct","parseInt","addProducts","htmlFor","ProductDetails","productId","_this2","DbCalls","match","params","_this3","CardBody","CardText","deleteProduct","ProductEditForm","updateExistingProduct","putProduct","LeadList","leads","lead","first_name","last_name","NewLeadForm","email_address","phone_number","lead_address","constructNewLead","addLeads","LeadDetails","leadId","ButtonGroup","deleteLead","LeadEditForm","updateExistingLead","putLead","SalesList","sales","sale","selectedLead","selectedProduct","SalesDetails","saleId","saleTime","deleteSale","SalesEditForm","updateExistingSale","putSale","Opportunities","selectedProductPrice","constructNewSale","getDate","addSales","Date","toLocaleString","response","data","leadsFromApi","display","catch","error","productsFromApi","validationError","marginTop","ApplicationViews","purchases","postNewUser","postNewProduct","postNewLead","getUserLeads","postNewSale","getUserSales","editedProductObject","editedLeadObject","editedSaleObject","newState","fetchAll","_callee","regenerator_default","wrap","_context","prev","next","t0","t1","sent","t2","t3","t4","t5","call","stop","componentDidMount","isAuthenticated","react_router","exact","path","render","home_Home","login_Login","assign","register_Register","productList_ProductList","addPurchase","deleteUserProduct","leadList_LeadList","salesList_SalesList","newProductForm_NewProductForm","newLeadForm_NewLeadForm","productDetails_ProductDetails","userProducts","leadDetails_LeadDetails","salesDetails_SalesDetails","driveTickets","productEditForm_ProductEditForm","leadEditForm_LeadEditForm","salesEditForm_SalesEditForm","opportunities_Opportunities","withRouter","Navigation","Nav","NavItem","NavLink","React","Project","navigation_Navigation","applicationViews","ReactDOM","project_Project","document","getElementById"],"mappings":"qfAOqBA,qKAEjB,WACI,OAEIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,aACnBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,UACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAb,mFACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAEdJ,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,YAEAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,IAAI,IAAIC,KAAK,YAAYH,UAAU,iBAAiBI,MAAM,UAAUC,KAAK,MAAjF,YAAwG,IACxGT,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,IAAI,IAAIC,KAAK,SAASC,MAAM,UAAUJ,UAAU,WAAWK,KAAK,MAAxE,SAA4F,IAC5FT,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQG,MAAM,UAAUC,KAAK,KAAKL,UAAU,YAAYM,QAAS,kBAAMC,eAAeC,MAAM,YAA5F,UAAuH,aAjBnGC,sBCFbC,qNAEjBC,MAAQ,CACJC,UAAW,GACXC,WAAY,GACZC,cAAe,MAGnBC,kBAAoB,SAAAC,GAChB,IAAMC,EAAgB,GACtBA,EAAcD,EAAIE,OAAOC,IAAMH,EAAIE,OAAOE,MAC1CC,QAAQC,IAAIL,GACZM,EAAKC,SAASP,MAGlBQ,eAAiB,SAAAT,GAEb,IAAMU,EAAU,CACZd,UAAWW,EAAKZ,MAAMC,UACtBe,MAAOJ,EAAKZ,MAAME,WAClBe,SAAUL,EAAKZ,MAAMG,eAGzBS,EAAKM,MAAMC,QAAQJ,GACdK,KAAK,kBAAMR,EAAKM,MAAMG,QAAQC,KAAK,OAEpC1B,eAAe2B,QAAQX,EAAKZ,MAAMC,UAAWW,EAAKZ,MAAMG,eAExDqB,MAAK,GAAAC,OAAIb,EAAKZ,MAAMC,UAAf,0FAGb,WACI,OACIhB,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEAzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACfJ,EAAAC,EAAAC,cAAA,8BAGAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,oBACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,cACVyC,SAAUC,KAAK3B,kBACfI,GAAG,YACHwB,YAAY,mBAIpB/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,eACVyC,SAAUC,KAAK3B,kBACfI,GAAG,aACHwB,YAAY,oBAIpB/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,kBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,gBACHwB,YAAY,uBAIpB/C,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQsC,KAAK,SAASjC,QAASoC,KAAKjB,eAAgBzB,UAAU,gBAAgBI,MAAM,UAAUC,KAAK,MAAnG,qBA3EsBI,cCCjBmC,qNAEjBjC,MAAQ,CAEJC,UAAW,GACXgB,SAAU,MAIdb,kBAAoB,SAAAC,GAChB,IAAMC,EAAgB,GACtBA,EAAcD,EAAIE,OAAOC,IAAMH,EAAIE,OAAOE,MAC1CC,QAAQC,IAAIL,GACZM,EAAKC,SAASP,MAGlB4B,YAAc,SAAC7B,GAEX,IAAI8B,EAAWvB,EAAKM,MAAMkB,MACtBC,EAAgBzB,EAAKZ,MAAMC,UAC3BqC,EAAgB1B,EAAKZ,MAAMiB,SAE3BsB,EAAYJ,EAASK,KAAK,SAAAC,GAAI,OAAIA,EAAKxC,YAAcoC,GAAiBI,EAAKxB,WAAaqB,IAC5F5B,QAAQC,IAAIC,EAAKZ,MAAMC,WACvBI,EAAIqC,iBAEA9B,EAAKZ,MAAMC,UAAoC,KAAxBW,EAAKZ,MAAMiB,SAClC0B,OAAOnB,MAAM,mBAEPe,EAGN3C,eAAe2B,QACX,SACAgB,EAAU/B,IAJdmC,OAAOnB,MAAM,mBAMXe,IACF3B,EAAKM,MAAMG,QAAQC,KAAK,KACxBqB,OAAOnB,MAAP,gBAAAC,OAA6Bc,EAAUtC,UAAvC,oDAIR,WACI,OACIhB,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEIzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAd,uBAGAJ,EAAAC,EAAAC,cAAA,WAEZF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACfJ,EAAAC,EAAAC,cAAA,uCAEAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,oBACRJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,oBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,YACHwB,YAAY,qBAIpB/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,oBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,WACHwB,YAAY,oBAIxB/C,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQsC,KAAK,SAASvC,UAAU,cAAcM,QAASoC,KAAKG,YAAazC,MAAM,UAAUC,KAAK,MAA9F,kBA9EuBI,qBCN7B8C,EAAY,wBAElBC,GAAAC,EAAA,CAEIC,QAFJ,SAEYvC,GACJ,OAAOwC,MAAK,GAAAvB,OAAImB,EAAJ,WAAAnB,OAAuBjB,IAAMY,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,UAGzDC,WANJ,SAMe3C,GACP,OAAOwC,MAAK,GAAAvB,OAAImB,EAAJ,cAAAnB,OAA0BjB,IAAMY,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,UAG5DE,QAVJ,SAUY5C,GACJ,OAAOwC,MAAK,GAAAvB,OAAImB,EAAJ,WAAAnB,OAAuBjB,IAAMY,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,UAGzDG,QAdJ,SAcY7C,GACJ,OAAOwC,MAAK,GAAAvB,OAAImB,EAAJ,WAAAnB,OAAuBjB,IAAMY,KAAM,SAAA6B,GAAC,OAAIA,EAAEC,UAG1DI,YAAa,WACT,OAAON,MAAK,GAAAvB,OAAImB,EAAJ,WAAuBxB,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,UAGnDK,eAtBJ,WAuBQ,OAAOP,MAAK,GAAAvB,OAAImB,EAAJ,cAA0BxB,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,UAGtDM,YA1BJ,WA2BQ,OAAOR,MAAK,GAAAvB,OAAImB,EAAJ,WAAuBxB,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,UAGnDO,gBA9BJ,WA+BQ,OAAOT,MAAK,GAAAvB,OAAImB,EAAJ,kBAA8BxB,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,UAG1DQ,gBAlCJ,WAmCQ,OAAOV,MAAK,GAAAvB,OAAImB,EAAJ,eAA2BxB,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,UAGvDS,YAtCJ,WAuCQ,OAAOX,MAAK,GAAAvB,OAAKmB,EAAL,WAAwBxB,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,UAGpDU,iBA1CJ,WA2CQ,IAAIC,EAAYjE,eAAekE,QAAQ,UACvC,OAAOd,MAAK,GAAAvB,OAAImB,EAAJ,sBAAAnB,OAAkCoC,IAAazC,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WA5C/Ea,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,6BAgDQ,IAAIe,EAAYjE,eAAekE,QAAQ,UACvC,OAAOd,MAAK,GAAAvB,OAAImB,EAAJ,qBAAAnB,OAAiCoC,IAAazC,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WAjD9Ea,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,0BAqDQ,IAAIe,EAAYjE,eAAekE,QAAQ,UACvC,OAAOd,MAAK,GAAAvB,OAAImB,EAAJ,kBAAAnB,OAA8BoC,IAAazC,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WAtD3Ea,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,0BA0DQ,IAAIe,EAAYjE,eAAekE,QAAQ,UACvC,OAAOd,MAAK,GAAAvB,OAAImB,EAAJ,kBAAAnB,OAA8BoC,IAAazC,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WA3D3Ea,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,iCA+DQ,IAAIe,EAAYjE,eAAekE,QAAQ,UACvC,OAAOd,MAAK,GAAAvB,OAAImB,EAAJ,oCAAAnB,OAAgDoC,IAAazC,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WAhE7Fa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,oCAoEQ,IAAIe,EAAYjE,eAAekE,QAAQ,UACvC,OAAOd,MAAK,GAAAvB,OAAImB,EAAJ,4BAAAnB,OAAwCoC,IAAazC,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WArErFa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,0BAyEQ,IAAIe,EAAYjE,eAAekE,QAAQ,UACvC,OAAOd,MAAK,GAAAvB,OAAImB,EAAJ,kBAAAnB,OAA8BoC,IAAazC,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WA1E3Ea,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,uBA6EgB/B,GACR,OAAOiC,MAAK,GAAAvB,OAAImB,EAAJ,UAAuB,CAC/BqB,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUvD,KACtBK,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WApFvBa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,0BAuFmByB,GACX,OAAOvB,MAAK,GAAAvB,OAAImB,EAAJ,aAA0B,CAClCqB,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUC,KACtBnD,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WA9FvBa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,uBAiGgB0B,GACR,OAAOxB,MAAK,GAAAvB,OAAImB,EAAJ,UAAuB,CAC/BqB,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUE,KACtBpD,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WAxGvBa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,iCA2G0B2B,GAClB,OAAOzB,MAAK,GAAAvB,OAAImB,EAAJ,oBAAiC,CACzCqB,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUG,KACtBrD,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WAlHvBa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,uBAqHgB4B,GACR,OAAO1B,MAAK,GAAAvB,OAAImB,EAAJ,UAAuB,CAC/BqB,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUI,KACtBtD,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WA5HvBa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,sBA+He6B,GACP,OAAO3B,MAAK,GAAAvB,OAAImB,EAAJ,cAAAnB,OAA0BkD,EAAcnE,IAAM,CACtDyD,OAAQ,MACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUK,KACtBvD,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WAtIvBa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,mBAyIY8B,GACJ,OAAO5B,MAAK,GAAAvB,OAAImB,EAAJ,WAAAnB,OAAuBmD,EAAWpE,IAAM,CAChDyD,OAAQ,MACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUM,KACtBxD,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WAhJvBa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,uBAmJgB+B,GAER,OAAO7B,MAAK,GAAAvB,OAAImB,EAAJ,eAAAnB,OAA2BoD,EAAerE,IAAM,CACxDyD,OAAQ,MACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUO,KACtBzD,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WA3JvBa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,0BA8JmBgC,GAEX,OAAO9B,MAAK,GAAAvB,OAAImB,EAAJ,6BAAAnB,OAAyCqD,EAAkBtE,IAAM,CACzEyD,OAAQ,MACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUQ,KACtB1D,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WAtKvBa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,mBAyKYiC,GAEJ,OAAO/B,MAAK,GAAAvB,OAAImB,EAAJ,WAAAnB,OAAuBsD,EAAWvE,IAAM,CAChDyD,OAAQ,MACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUS,KACtB3D,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WAjLvBa,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,yBAoLkBtC,GACV,OAAOwC,MAAK,GAAAvB,OAAImB,EAAJ,cAAAnB,OAA0BjB,GAAM,CACxCyD,OAAQ,SACRC,QAAS,CACLC,eAAgB,sBAErB/C,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,KAAK,OA1L5Ba,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,sBA6LetC,GACP,OAAOwC,MAAK,GAAAvB,OAAImB,EAAJ,WAAAnB,OAAuBjB,GAAM,CACrCyD,OAAQ,SACRC,QAAS,CACLC,eAAgB,sBAErB/C,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,KAAK,OAnM5Ba,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,6BAsMsBtC,GACd,OAAOwC,MAAK,GAAAvB,OAAImB,EAAJ,kBAAAnB,OAA8BjB,GAAM,CAC5CyD,OAAQ,SACRC,QAAS,CACLC,eAAgB,sBAErB/C,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,KAAK,OA5M5Ba,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,6BA+MsBtC,GACd,OAAOwC,MAAK,GAAAvB,OAAImB,EAAJ,6BAAAnB,OAAyCjB,GAAM,CACvDyD,OAAQ,SACRC,QAAS,CACLC,eAAgB,sBAErB/C,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,KAAK,OArN5Ba,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,sBAwNetC,GACP,OAAOwC,MAAK,GAAAvB,OAAImB,EAAJ,WAAAnB,OAAuBjB,GAAM,CACrCyD,OAAQ,SACRC,QAAS,CACLC,eAAgB,sBAErB/C,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,KAAK,OA9N5Ba,OAAAC,EAAA,EAAAD,CAAAjB,EAAA,0BAiOmBtC,GACX,OAAOwC,MAAK,GAAAvB,OAAImB,EAAJ,eAAAnB,OAA2BjB,GAAM,CACzCyD,OAAQ,SACRC,QAAS,CACLC,eAAgB,sBAErB/C,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,WAvOvBJ,mBCMqBkC,qNAIjBC,YAAc,SAAChC,GACXA,EAAEP,8DAGN,WAEI,OADAhC,QAAQC,IAAIoB,KAAKb,MAAMgE,UAGnBjG,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEAzC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAASE,UAAU,YACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACfJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBAAd,uBAGI0C,KAAKb,MAAMgE,SAASC,IAAI,SAAAC,GAAO,OAC3BnG,EAAAC,EAAAC,cAAA,OAAKkG,IAAKD,EAAQ5E,IAC9BvB,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMlB,MAAI,EAACmB,SAAO,EAAClG,UAAU,kBAAkBmG,MAAO,CAAEC,gBAAiB,UAAWC,YAAa,SAC7FzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KAAW1G,EAAAC,EAAAC,cAAA,UAAKiG,EAAQQ,cAExB3G,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAE,aAAArE,OAAe2D,EAAQ5E,GAAvB,aACJvB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQD,UAAU,oBAAoBI,MAAM,UAAUC,KAAK,MAA3D,gBAKJT,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAE,iBACJ7G,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQD,UAAU,sBAAsBI,MAAM,WAA9C,mCAlCiBK,cCJpBiG,8MAEjB/F,MAAQ,CACJgG,OAAQ,GACRJ,YAAa,GACbK,aAAc,GACdC,cAAe,GACfC,mBAAoB,MAGxB/F,kBAAoB,SAAAC,GAChB,IAAMC,EAAgB,GACtBA,EAAcD,EAAIE,OAAOC,IAAMH,EAAIE,OAAOE,MAC1CG,EAAKC,SAASP,MAGlB8F,oBAAsB,WAClB,IAAIJ,EAASpG,eAAekE,QAAQ,UAC9BS,EAAa,CACfyB,OAAQK,SAASL,GACjBJ,YAAahF,EAAKZ,MAAM4F,YACxBK,aAAcrF,EAAKZ,MAAMiG,aACzBC,cAAetF,EAAKZ,MAAMkG,cAC1BC,mBAAoBvF,EAAKZ,MAAMmG,oBAGnCvF,EAAKM,MAAMoF,YAAY/B,GAClBnD,KAAK,kBAAMR,EAAKM,MAAMG,QAAQC,KAAK,4DAG5C,WAEI,OACIrC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEAzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,mCAGCF,EAAAC,EAAAC,cAAA,QAAME,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,iBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,kBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,cACHwB,YAAY,UAIpB/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,kBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,mBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,eACHwB,YAAY,WAIpB/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,mBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,oBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,gBACHwB,YAAY,YAIpB/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,wBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,yBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,qBACHwB,YAAY,iBAIpB/C,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQG,MAAM,UAAUmC,KAAK,SAASjC,QAASoC,KAAKqE,oBAAqB/G,UAAU,iBAAnF,mBA1FwBS,6BCMvB0G,qNAEjBxG,MAAQ,CACJyG,UAAW,GACXb,YAAa,GACbK,aAAc,GACdC,cAAe,GACfC,mBAAoB,2DAGxB,WAAoB,IAAAO,EAAA3E,KAChB4E,EAAQxD,WAAWpB,KAAKb,MAAM0F,MAAMC,OAAOJ,WACtCrF,KAAK,SAAAgE,GACFsB,EAAK7F,SAAS,CACV4F,UAAWrB,EAAQ5E,GACnBoF,YAAaR,EAAQQ,YACrBK,aAAcb,EAAQa,aACtBC,cAAed,EAAQc,cACvBC,mBAAoBf,EAAQe,6CAM5C,WAAS,IAAAW,EAAA/E,KACL,OACI9C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMlB,MAAI,EAACmB,SAAO,EAAClG,UAAU,kBAAkBmG,MAAO,CAAEC,gBAAiB,OAAQC,YAAa,SAC1FzG,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACI9H,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAA,UAAK4C,KAAK/B,MAAM4F,cAEpB3G,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACI/H,EAAAC,EAAAC,cAAA,mBAAW4C,KAAK/B,MAAMiG,cACtBhH,EAAAC,EAAAC,cAAA,oBAAY4C,KAAK/B,MAAMkG,eACvBjH,EAAAC,EAAAC,cAAA,yBAAiB4C,KAAK/B,MAAMmG,qBAGhClH,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAE,aAAArE,OAAeM,KAAK/B,MAAMyG,UAA1B,UACJxH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQG,MAAM,UAAUC,KAAK,KAAKL,UAAU,kBAA5C,SAEJJ,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAE,aACR7G,EAAAC,EAAAC,cAACG,EAAA,EAADyE,OAAAC,EAAA,EAAAD,CAAA,CAAQtE,MAAM,UAAUC,KAAK,KAAKL,UAAU,mBAAmBM,QAAS,kBACpEmH,EAAK5F,MAAM+F,cAAcH,EAAK9G,MAAMyG,aADxC,YAC8D,oBAD9D,qBA1CoB3G,cCHvBoH,8MAEjBlH,MAAQ,CACJgG,OAAQ,GACRJ,YAAa,GACbK,aAAc,GACdC,cAAe,GACfC,mBAAoB,MAGxB/F,kBAAoB,SAAAC,GAChB,IAAMC,EAAgB,GACtBA,EAAcD,EAAIE,OAAOC,IAAMH,EAAIE,OAAOE,MAC1CG,EAAKC,SAASP,MAGlB6G,sBAAwB,SAAA9G,GACpBA,EAAIqC,iBAEJ,IAAMiC,EAAgB,CAClBnE,GAAII,EAAKM,MAAM0F,MAAMC,OAAOJ,UAC5BT,OAAQpF,EAAKZ,MAAMgG,OACnBJ,YAAahF,EAAKZ,MAAM4F,YACxBK,aAAcrF,EAAKZ,MAAMiG,aACzBC,cAAetF,EAAKZ,MAAMkG,cAC1BC,mBAAoBvF,EAAKZ,MAAMmG,oBAEnCvF,EAAKM,MAAMkG,WAAWzC,GACjBvD,KAAK,kBAAMR,EAAKM,MAAMG,QAAQC,KAAK,uEAG5C,WAAoB,IAAAoF,EAAA3E,KAChB4E,EAAQxD,WAAWpB,KAAKb,MAAM0F,MAAMC,OAAOJ,WACtCrF,KAAK,SAAAgE,GACFsB,EAAK7F,SAAS,CACVmF,OAAQZ,EAAQY,OAChBJ,YAAaR,EAAQQ,YACrBK,aAAcb,EAAQa,aACtBC,cAAed,EAAQc,cACvBC,mBAAoBf,EAAQe,6CAK5C,WAAS,IAAAW,EAAA/E,KACL,OACI9C,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEAzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,gCAGAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,mBACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,iBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,sBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,cACHC,MAAOsB,KAAK/B,MAAM4F,eAI1B3G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,kBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,uBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,eACHC,MAAOsB,KAAK/B,MAAMiG,gBAI1BhH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,mBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,wBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,gBACHC,MAAOsB,KAAK/B,MAAMkG,iBAI1BjH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,wBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,6BACVyC,SAAUC,KAAK3B,kBACfI,GAAG,qBACHC,MAAOsB,KAAK/B,MAAMmG,sBAI1BlH,EAAAC,EAAAC,cAACG,EAAA,EAADyE,OAAAC,EAAA,EAAAD,CAAA,CAAQ1E,UAAU,iBAAiBI,MAAM,UAAUmC,KAAK,SACpDjC,QAAS,SAACU,GAAD,OAASyG,EAAKK,sBAAsB9G,KADjD,YAEc,kBAFd,sBArGyBP,aCDxBuH,qNAEjBpC,YAAc,SAAChC,GACXA,EAAEP,8DAGN,WAEI,OACIzD,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEAzC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAASE,UAAU,SACnBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACfJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,oBAGQ0C,KAAKb,MAAMoG,MAAMnC,IAAI,SAAAoC,GAAI,OACrBtI,EAAAC,EAAAC,cAAA,OAAKkG,IAAKkC,EAAK/G,IACXvB,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMlB,MAAI,EAACmB,SAAO,EAAClG,UAAU,gBAAgBmG,MAAO,CAAEC,gBAAiB,UAAWC,YAAa,SAC3FzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KAAW1G,EAAAC,EAAAC,cAAA,UAAKoI,EAAKC,WAAV,IAAuBD,EAAKE,YAEnCxI,EAAAC,EAAAC,cAAA,WAEpBF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAE,UAAArE,OAAY8F,EAAK/G,GAAjB,aACRvB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQD,UAAU,oBAAoBI,MAAM,UAAUC,KAAK,MAA3D,gBASAT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAE,cACR7G,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQD,UAAU,aAAaI,MAAM,WAArC,gCArCkBK,cCAjB4H,8MAEjB1H,MAAQ,CACJgG,OAAQ,GACRwB,WAAY,GACZC,UAAW,GACXE,cAAe,GACfC,aAAc,GACdC,aAAc,MAGlBzH,kBAAoB,SAAAC,GAChB,IAAMC,EAAgB,GACtBA,EAAcD,EAAIE,OAAOC,IAAMH,EAAIE,OAAOE,MAC1CG,EAAKC,SAASP,MAGlBwH,iBAAmB,WACf,IAAI9B,EAASpG,eAAekE,QAAQ,UAC9BU,EAAU,CACZgD,WAAY5G,EAAKZ,MAAMwH,WACvBC,UAAW7G,EAAKZ,MAAMyH,UACtBE,cAAe/G,EAAKZ,MAAM2H,cAC1BC,aAAchH,EAAKZ,MAAM4H,aACzBC,aAAcjH,EAAKZ,MAAM6H,aACzB7B,OAAQK,SAASL,IAGrBpF,EAAKM,MAAM6G,SAASvD,GACfpD,KAAK,kBAAMR,EAAKM,MAAMG,QAAQC,KAAK,yDAG5C,WAEI,OACIrC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEAzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACXJ,EAAAC,EAAAC,cAAA,gCAGCF,EAAAC,EAAAC,cAAA,QAAME,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,kBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,oBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,aACHwB,YAAY,gBAIpB/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,iBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,mBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,YACHwB,YAAY,eAIpB/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,qBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,uBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,gBACHwB,YAAY,mBAIpB/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,oBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,sBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,eACHwB,YAAY,kBAIpB/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,gBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,kBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,eACHwB,YAAY,kBAIpB/C,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQsC,KAAK,SAASnC,MAAM,UAAUE,QAASoC,KAAK+F,iBAAkBzI,UAAU,cAAhF,mBAxGqBS,qBCKpBkI,qNAEjBhI,MAAQ,CACJiI,OAAQ,GACRT,WAAY,GACZC,UAAW,GACXE,cAAe,GACfE,aAAc,2DAGlB,WAAoB,IAAAnB,EAAA3E,KAChB4E,EAAQvD,QAAQrB,KAAKb,MAAM0F,MAAMC,OAAOoB,QACnC7G,KAAK,SAAAmG,GACFb,EAAK7F,SAAS,CACVoH,OAAQV,EAAK/G,GACbgH,WAAYD,EAAKC,WACjBC,UAAWF,EAAKE,UAChBE,cAAeJ,EAAKI,cACpBC,aAAcL,EAAKK,aACnBC,aAAcN,EAAKM,uCAMnC,WAAS,IAAAf,EAAA/E,KACL,OACI9C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMlB,MAAI,EAACmB,SAAO,EAAClG,UAAU,kBAAkBmG,MAAO,CAAEC,gBAAiB,OAAQC,YAAa,SAC1FzG,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACI9H,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAA,UAAK4C,KAAK/B,MAAMwH,WAAhB,IAA6BzF,KAAK/B,MAAMyH,YAE5CxI,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACI/H,EAAAC,EAAAC,cAAA,mBAAW4C,KAAK/B,MAAM2H,gBAE1B1I,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACI/H,EAAAC,EAAAC,cAAA,mBAAW4C,KAAK/B,MAAM4H,eAE1B3I,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACI/H,EAAAC,EAAAC,cAAA,qBAAa4C,KAAK/B,MAAM6H,eAG5B5I,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,KACAjJ,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAE,UAAArE,OAAYM,KAAK/B,MAAMiI,OAAvB,UACJhJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQG,MAAM,UAAUC,KAAK,KAAKL,UAAU,eAA5C,SAEJJ,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAE,UACR7G,EAAAC,EAAAC,cAACG,EAAA,EAADyE,OAAAC,EAAA,EAAAD,CAAA,CAAQtE,MAAM,UAAUC,KAAK,KAAKL,UAAU,gBAAgBM,QAAS,kBACjEmH,EAAK5F,MAAMiH,WAAWrB,EAAK9G,MAAMiI,UADrC,YACwD,oBADxD,sBAhDiBnI,cCJpBsI,8MAEjBpI,MAAQ,CACJgG,OAAQ,GACRwB,WAAY,GACZC,UAAW,GACXE,cAAe,GACfC,aAAc,GACdC,aAAc,MAGlBzH,kBAAoB,SAAAC,GAChB,IAAMC,EAAgB,GACtBA,EAAcD,EAAIE,OAAOC,IAAMH,EAAIE,OAAOE,MAC1CG,EAAKC,SAASP,MAGlB+H,mBAAqB,SAAAhI,GACjBA,EAAIqC,iBAEJ,IAAMkC,EAAa,CACfpE,GAAII,EAAKM,MAAM0F,MAAMC,OAAOoB,OAC5BjC,OAAQpF,EAAKZ,MAAMgG,OACnBwB,WAAY5G,EAAKZ,MAAMwH,WACvBC,UAAW7G,EAAKZ,MAAMyH,UACtBE,cAAe/G,EAAKZ,MAAM2H,cAC1BC,aAAchH,EAAKZ,MAAM4H,aACzBC,aAAcjH,EAAKZ,MAAM6H,cAE7BjH,EAAKM,MAAMoH,QAAQ1D,GACdxD,KAAK,kBAAMR,EAAKM,MAAMG,QAAQC,KAAK,oEAG5C,WAAoB,IAAAoF,EAAA3E,KAChB4E,EAAQvD,QAAQrB,KAAKb,MAAM0F,MAAMC,OAAOoB,QACnC7G,KAAK,SAAAmG,GACFb,EAAK7F,SAAS,CACVmF,OAAQuB,EAAKvB,OACbwB,WAAYD,EAAKC,WACjBC,UAAWF,EAAKE,UAChBE,cAAeJ,EAAKI,cACpBC,aAAcL,EAAKK,aACnBC,aAAcN,EAAKM,uCAKnC,WAAS,IAAAf,EAAA/E,KACL,OACA9C,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEAzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,6BAGJF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACPJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,cACXtH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,wBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,aACHC,MAAOsB,KAAK/B,MAAMwH,cAI1BvI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,aACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,uBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,YACHC,MAAOsB,KAAK/B,MAAMyH,aAI1BxI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,iBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,2BACVyC,SAAUC,KAAK3B,kBACfI,GAAG,gBACHC,MAAOsB,KAAK/B,MAAM2H,iBAI1B1I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,gBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,0BACVyC,SAAUC,KAAK3B,kBACfI,GAAG,eACHC,MAAOsB,KAAK/B,MAAM4H,gBAI1B3I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,gBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,sBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,eACHC,MAAOsB,KAAK/B,MAAM6H,gBAI1B5I,EAAAC,EAAAC,cAACG,EAAA,EAADyE,OAAAC,EAAA,EAAAD,CAAA,CAAQ1E,UAAU,cAAcI,MAAM,UAAUmC,KAAK,SACjDjC,QAAS,SAACU,GAAD,OAASyG,EAAKuB,mBAAmBhI,KAD9C,YAEc,eAFd,sBApHsBP,aCDrByI,qNAEjBtD,YAAc,SAAChC,GACXA,EAAEP,iBACFhC,QAAQC,IAAI,6DAGhB,WACI,OAEI1B,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KACAzC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAASE,UAAU,aACfJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,SAEI0C,KAAKb,MAAMsH,MAAMrD,IAAI,SAAAsD,GAAI,OACrBxJ,EAAAC,EAAAC,cAAA,OAAKkG,IAAKoD,EAAKjI,IAEnBvB,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMlB,MAAI,EAACmB,SAAO,EAAClG,UAAU,YAAYmG,MAAO,CAAEC,gBAAiB,UAAWC,YAAa,SACvFzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KAAU/H,EAAAC,EAAAC,cAAA,UAAKsJ,EAAKC,aAAV,iBACVzJ,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KAAU/H,EAAAC,EAAAC,cAAA,UAAKsJ,EAAKE,kBAEZ1J,EAAAC,EAAAC,cAAA,YAGJF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAE,UAAArE,OAAYgH,EAAKjI,GAAjB,aACpBvB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQD,UAAU,qBAAqBI,MAAM,UAAUC,KAAK,MAA5D,0BA3BeI,cCElB8I,8MAEjB5I,MAAQ,CACJ6I,OAAQ,GACRH,aAAc,GACdC,gBAAiB,GACjBG,SAAU,2DAGd,WAAoB,IAAApC,EAAA3E,KAChB4E,EAAQtD,QAAQtB,KAAKb,MAAM0F,MAAMC,OAAOgC,QACnCzH,KAAK,SAAAqH,GACF/B,EAAK7F,SAAS,CACVgI,OAAQJ,EAAKjI,GACbkI,aAAcD,EAAKC,aACnBC,gBAAiBF,EAAKE,gBACtBG,SAAUL,EAAKK,mCAM/B,WAAS,IAAAhC,EAAA/E,KACL,OACI9C,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEAzC,EAAAC,EAAAC,cAAA,WACQF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMlB,MAAI,EAACmB,SAAO,EAAClG,UAAU,mBAAmBmG,MAAO,CAAEC,gBAAiB,OAAQC,YAAa,SAC/FzG,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACI9H,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAA,kBAAU4C,KAAK/B,MAAM0I,cACrBzJ,EAAAC,EAAAC,cAAA,qBAAa4C,KAAK/B,MAAM2I,iBACxB1J,EAAAC,EAAAC,cAAA,uBAAe4C,KAAK/B,MAAM8I,WAE9B7J,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAE,UAAArE,OAAYM,KAAK/B,MAAM6I,OAAvB,UACJ5J,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQG,MAAM,UAAUC,KAAK,KAAKL,UAAU,eAA5C,SAEJJ,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,GAAG,UACT7G,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQG,MAAM,UAAUC,KAAK,KAAKC,QAAS,kBACvCmH,EAAK5F,MAAM6H,WAAWjC,EAAK9G,MAAM6I,SAASxJ,UAAU,iBADxD,sBAtCkBS,aCDrBkJ,8MAEjBhJ,MAAQ,CACJ6I,OAAQ,GACRH,aAAc,GACdC,gBAAiB,MAGrBvI,kBAAoB,SAAAC,GAChB,IAAMC,EAAgB,GACtBA,EAAcD,EAAIE,OAAOC,IAAMH,EAAIE,OAAOE,MAC1CC,QAAQC,IAAIL,GACZM,EAAKC,SAASP,MAGlB2I,mBAAqB,SAAA5I,GACjBA,EAAIqC,iBAEJ,IAAIsD,EAASpG,eAAekE,QAAQ,UAE9BiB,EAAa,CACfvE,GAAII,EAAKM,MAAM0F,MAAMC,OAAOgC,OAC5BH,aAAc9H,EAAKZ,MAAM0I,aACzBC,gBAAiB/H,EAAKZ,MAAM2I,gBAC5B3C,OAAQK,SAASL,GACjB8C,SAAUlI,EAAKZ,MAAM8I,UAGzBlI,EAAKM,MAAMgI,QAAQnE,GACd3D,KAAK,kBAAMR,EAAKM,MAAMG,QAAQC,KAAK,oEAG5C,WAAoB,IAAAoF,EAAA3E,KAChB4E,EAAQtD,QAAQtB,KAAKb,MAAM0F,MAAMC,OAAOgC,QACnCzH,KAAK,SAAAqH,GACF/B,EAAK7F,SAAS,CACVgI,OAAQJ,EAAKjI,GACbkI,aAAcD,EAAKC,aACnBC,gBAAiBF,EAAKE,gBACtBG,SAAUL,EAAKK,mCAK/B,WAAS,IAAAhC,EAAA/E,KACL,OACI9C,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEAzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,6BAGAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,qBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,mBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,eACHC,MAAOsB,KAAK/B,MAAM0I,gBAI1BzJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOoH,QAAQ,wBACftH,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAQ,EACRxC,UAAU,sBACVyC,SAAUC,KAAK3B,kBACfI,GAAG,kBACHC,MAAOsB,KAAK/B,MAAM2I,mBAI1B1J,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQD,UAAU,cAAcI,MAAM,UAAUmC,KAAK,SACjDjC,QAAS,SAACU,GAAD,OAASyG,EAAKmC,mBAAmB5I,KAD9C,sBA7EuBP,aCEtBqJ,qNAEjBnJ,MAAQ,CACJgG,OAAQ,GACRd,SAAU,GACVoC,MAAO,GACPkB,MAAO,GACPG,gBAAiB,GACjBS,qBAAsB,GACtBV,aAAc,GACdI,SAAU,MA+DVO,iBAAmB,SAAChJ,GAElB,IAAI2F,EAASpG,eAAekE,QAAQ,UAE9BY,EAAU,CACdlE,GAAII,EAAKM,MAAM0F,MAAMC,OAAOgC,OAC5B7C,OAAQK,SAASL,GACjB0C,aAAc9H,EAAKZ,MAAM0I,aACzBC,gBAAiB/H,EAAKZ,MAAM2I,gBAC5BS,qBAAsBxI,EAAKZ,MAAMoJ,qBACjCN,SAAUlI,EAAK0I,WAGjB5I,QAAQC,IAAI+D,GACd9D,EAAKM,MAAMqI,SAAS7E,GACnBtD,KAAK,kBAAMR,EAAKM,MAAMG,QAAQC,KAAK,0DA3ExC,WAGE,OAFU,IAAIkI,MACGC,kDAInB,WAAoB,IAAA/C,EAAA3E,KAEZ8B,EAAYjE,eAAekE,QAAQ,UAEzCd,MAAK,GAAAvB,OAHe,wBAGf,kBAAAA,OAC0BoC,IAE5BzC,KAAK,SAAAsI,GACJ,OAAOA,EAASxG,SAEjB9B,KAAK,SAAAuI,GACJ,IAAIC,EAAeD,EAAKxE,IAAI,SAAAoC,GACxB,MAAO,CAAE9G,MAAO8G,EAAKC,WAAa,IAAMD,EAAKE,UAAWoC,QAAStC,EAAKC,WAAa,IAAMD,EAAKE,aAEhGf,EAAK7F,SAAS,CACZyG,MAAO,CACL,CACE7G,MAAO,GACPoJ,QACA,uBAEFpI,OAAOmI,OAGZE,MAAM,SAAAC,GACLrJ,QAAQC,IAAIoJ,KAGd/G,MAAK,GAAAvB,OA3BW,wBA2BX,qBAAAA,OAC6BoC,IAE/BzC,KAAK,SAAAsI,GACJ,OAAOA,EAASxG,SAEjB9B,KAAK,SAAAuI,GACJ,IAAIK,EAAkBL,EAAKxE,IAAI,SAAAC,GAC3B,MAAO,CAAE3E,MAAO2E,EAAQQ,YAAaiE,QAASzE,EAAQQ,YAAawD,qBAAsBhE,EAAQa,gBAEnGS,EAAK7F,SAAS,CACZqE,SAAU,CACR,CACEzE,MAAO,GACPoJ,QACA,wBACAT,qBAAsB,KAExB3H,OAAOuI,OAGZF,MAAM,SAAAC,GACLrJ,QAAQC,IAAIoJ,2BAsBxB,WAAS,IAAAjD,EAAA/E,KAEL,OADFrB,QAAQC,IAAIoB,KAAK/B,MAAMkF,UAInBjG,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KACEzC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,mBAIRJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAOtC,UAAU,kBAAkBuC,KAAK,SACtCnB,MAAOsB,KAAK/B,MAAM0I,aAClB5G,SAAU,SAAAmB,GAAC,OACT6D,EAAKjG,SAAS,CACZ6H,aAAczF,EAAE1C,OAAOE,MACvBwJ,gBACqB,KAAnBhH,EAAE1C,OAAOE,MACL,yBACA,OAITsB,KAAK/B,MAAMsH,MAAMnC,IAAI,SAAAoC,GAAI,OACxBtI,EAAAC,EAAAC,cAAA,UACEkG,IAAKkC,EAAK9G,MACVA,MAAO8G,EAAK9G,OAEX8G,EAAKsC,YAIZ5K,EAAAC,EAAAC,cAAA,OACEqG,MAAO,CACL/F,MAAO,MACPyK,UAAW,QAGZnI,KAAK/B,MAAMiK,kBAGRhL,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAOtC,UAAU,qBAAqBuC,KAAK,SACzCnB,MAAOsB,KAAK/B,MAAM2I,gBAClBS,qBAAsBrH,KAAK/B,MAAMoJ,qBACjCtH,SAAU,SAAAmB,GAAC,OACT6D,EAAKjG,SAAS,CACZ8H,gBAAiB1F,EAAE1C,OAAOE,MAC1B2I,qBAAsBnG,EAAE1C,OAAO6I,qBAC/Ba,gBACqB,KAAnBhH,EAAE1C,OAAOE,MACL,4BACA,OAITsB,KAAK/B,MAAMkF,SAASC,IAAI,SAAAC,GAAO,OAC9BnG,EAAAC,EAAAC,cAAA,UACEkG,IAAKD,EAAQ3E,MACbA,MAAO2E,EAAQ3E,OAEd2E,EAAQyE,YAIf5K,EAAAC,EAAAC,cAAA,OACEqG,MAAO,CACL/F,MAAO,MACPyK,UAAW,QAGZnI,KAAK/B,MAAMiK,kBAMdhL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACfJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQsC,KAAK,SAASnC,MAAM,UAAUJ,UAAU,yBAC1CM,QAAS,WACLmH,EAAKuC,qBAFf,2BA7KiCvJ,cCYrCqK,8MAEFnK,MAAQ,CACJoC,MAAO,GACP8C,SAAU,GACVoC,MAAO,GACPkB,MAAO,GACP4B,UAAW,MAGfjJ,QAAU,SAACsB,GAAD,OACNkE,EAAQ0D,YAAY5H,GACfrB,KAAK,kBAAMuF,EAAQrD,gBACnBlC,KAAK,SAAAgB,GAAK,OACPxB,EAAKC,SAAS,CACVuB,MAAOA,SAGvBkE,YAAc,SAAClB,GAAD,OACVuB,EAAQ2D,eAAelF,GAClBhE,KAAK,kBAAMuF,EAAQlD,oBACnBrC,KAAK,SAAA8D,GAAQ,OACVtE,EAAKC,SAAS,CACVqE,SAAUA,SAG1B6C,SAAW,SAACR,GAAD,OACPZ,EAAQ4D,YAAYhD,GACfnG,KAAK,kBAAMuF,EAAQ6D,iBACnBpJ,KAAK,SAAAkG,GAAK,OACP1G,EAAKC,SAAS,CACVyG,MAAOA,SAGvBiC,SAAW,SAACd,GAAD,OACP9B,EAAQ8D,YAAYhC,GACfrH,KAAK,kBAAMuF,EAAQ+D,iBACnBtJ,KAAK,SAAAoH,GAAK,OACP5H,EAAKC,SAAS,CACV2H,MAAOA,SAGvBpB,WAAa,SAACuD,GACV,OAAOhE,EAAQS,WAAWuD,GACrBvJ,KAAK,kBAAMuF,EAAQlD,oBACnBrC,KAAK,SAAA8D,GACFtE,EAAKC,SAAS,CACVqE,SAAUA,SAM1BoD,QAAU,SAACsC,GACP,OAAOjE,EAAQ2B,QAAQsC,GAClBxJ,KAAK,kBAAMuF,EAAQ6D,iBACnBpJ,KAAK,SAAAkG,GACF1G,EAAKC,SAAS,CACVyG,MAAOA,SAMvB4B,QAAU,SAAC2B,GACP,OAAOlE,EAAQuC,QAAQ2B,GAClBzJ,KAAK,kBAAMuF,EAAQ+D,iBACnBtJ,KAAK,SAAAoH,GACF5H,EAAKC,SAAS,CACV2H,MAAOA,SAKvBvB,cAAgB,SAAC7B,GACb,IAAM0F,EAAW,GACjBnE,EAAQM,cAAc7B,GACjBhE,KAAK,kBACFuF,EAAQlD,oBAEXrC,KAAK,SAAA8D,GAAc4F,EAAS5F,SAAWA,IACvC9D,KAAK,kBAAMR,EAAKC,SAASiK,QAGlC3C,WAAa,SAACZ,GACV,IAAMuD,EAAW,GACjBnE,EAAQwB,WAAWZ,GACdnG,KAAK,kBACFuF,EAAQ6D,iBAEXpJ,KAAK,SAAAkG,GAAWwD,EAASxD,MAAQA,IACjClG,KAAK,kBAAMR,EAAKC,SAASiK,QAGlC/B,WAAa,SAACN,GACV,IAAMqC,EAAW,GACjBnE,EAAQoC,WAAWN,GACdrH,KAAK,kBACFuF,EAAQ+D,iBAEXtJ,KAAK,SAAAoH,GAAWsC,EAAStC,MAAQA,IACjCpH,KAAK,kBAAMR,EAAKC,SAASiK,QAGlCC,8BAAW,SAAAC,IAAA,OAAAC,EAAA/L,EAAAgM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,GAAA1K,EAAAuK,EAAAE,KAAA,EAEU1E,EAAQrD,cAFlB,cAAA6H,EAAAI,GAAAJ,EAAAK,KAAAL,EAAAE,KAAA,EAGa1E,EAAQlD,kBAHrB,cAAA0H,EAAAM,GAAAN,EAAAK,KAAAL,EAAAE,KAAA,EAIU1E,EAAQ6D,eAJlB,cAAAW,EAAAO,GAAAP,EAAAK,KAAAL,EAAAE,KAAA,GAKU1E,EAAQ+D,eALlB,QAAAS,EAAAQ,GAAAR,EAAAK,KAAAL,EAAAS,GAAA,CAEHxJ,MAFG+I,EAAAI,GAGHrG,SAHGiG,EAAAM,GAIHnE,MAJG6D,EAAAO,GAKHlD,MALG2C,EAAAQ,IAAAR,EAAAG,GACFzK,SADEgL,KAAAV,EAAAG,GAAAH,EAAAS,IAAA,yBAAAT,EAAAW,SAAAd,QAaXe,kBAAoB,WAChBnL,EAAKmK,cAGTiB,gBAAkB,kBAA2C,OAArCpM,eAAekE,QAAQ,uDAE/C,WAAS,IAAA4C,EAAA3E,KACL,OAEI9C,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KAEIzC,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IACdC,OAAQ,SAAClL,GACL,OAAOjC,EAAAC,EAAAC,cAACkN,EACDnL,MAMfjC,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOE,KAAK,SACRC,OAAQ,SAAClL,GACL,OAAOjC,EAAAC,EAAAC,cAACmN,EAADvI,OAAAwI,OAAA,GACArL,EADA,CAGHkB,MAAOsE,EAAK1G,MAAMoC,YAK9BnD,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOE,KAAK,YACRC,OAAQ,SAAClL,GACL,OAAOjC,EAAAC,EAAAC,cAACqN,EAADzI,OAAAwI,OAAA,GACArL,EADA,CAGHkB,MAAOsE,EAAK1G,MAAMoC,MAClBjB,QAASuF,EAAKvF,cAK1BlC,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,OAAQ,SAAClL,GACnC,OAAIwF,EAAKsF,kBACE/M,EAAAC,EAAAC,cAACsN,EAAD,CACHvH,SAAUwB,EAAK1G,MAAMkF,SACrBwH,YAAahG,EAAKgG,YAClBzF,cAAeP,EAAKO,cACpB0F,kBAAmBjG,EAAKiG,oBAGrB1N,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAUnG,GAAG,cAK5B7G,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAClL,GAChC,OAAIwF,EAAKsF,kBACE/M,EAAAC,EAAAC,cAACyN,EAAD,CACH1H,SAAUwB,EAAK1G,MAAMkF,SACrBoC,MAAOZ,EAAK1G,MAAMsH,MAClBoF,YAAahG,EAAKgG,YAClBzF,cAAeP,EAAKO,cACpB0F,kBAAmBjG,EAAKiG,oBAGrB1N,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAUnG,GAAG,cAK5B7G,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAClL,GAChC,OAAIwF,EAAKsF,kBACE/M,EAAAC,EAAAC,cAAC0N,EAAD9I,OAAAwI,OAAA,GAAerL,EAAf,CAEPsH,MAAO9B,EAAK1G,MAAMwI,SAGXvJ,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAUnG,GAAG,cAK5B7G,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOE,KAAK,gBAAgBC,OAAQ,SAAClL,GACjC,OAAOjC,EAAAC,EAAAC,cAAC2N,EAAD/I,OAAAwI,OAAA,GAAoBrL,EAApB,CACHoF,YAAaI,EAAKJ,YAClBpB,SAAUwB,EAAK1G,MAAMkF,eAI7BjG,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOE,KAAK,aAAaC,OAAQ,SAAClL,GAC9B,OAAOjC,EAAAC,EAAAC,cAAC4N,EAADhJ,OAAAwI,OAAA,GAAiBrL,EAAjB,CACH6G,SAAUrB,EAAKqB,SACfT,MAAOZ,EAAK1G,MAAMsH,YAI1BrI,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,qCAAoCC,OAAQ,SAAClL,GAC3D,OAAOjC,EAAAC,EAAAC,cAAC6N,EAADjJ,OAAAwI,OAAA,GACArL,EADA,CAGH+F,cAAeP,EAAKO,cACpB/B,SAAUwB,EAAK1G,MAAMkF,SACrByH,kBAAmBjG,EAAKiG,kBACxBM,aAAcvG,EAAK1G,MAAMiN,mBAKjChO,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,+BAA8BC,OAAQ,SAAClL,GACrD,OAAOjC,EAAAC,EAAAC,cAAC+N,EAADnJ,OAAAwI,OAAA,GACArL,EADA,CAGHiH,WAAYzB,EAAKyB,WACjBb,MAAOZ,EAAK1G,MAAMsH,MAClBqF,kBAAmBjG,EAAKiG,kBACxBM,aAAcvG,EAAK1G,MAAMiN,mBAK7BhO,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,+BAA8BC,OAAQ,SAAClL,GACzD,OAAOjC,EAAAC,EAAAC,cAACgO,EAADpJ,OAAAwI,OAAA,GACArL,EADA,CAGH6H,WAAYrC,EAAKqC,WACjBqE,aAAc1G,EAAK1G,MAAMoN,aACzB5E,MAAO9B,EAAK1G,MAAMwI,YAI1BvJ,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOE,KAAK,kCACRC,OAAQ,SAAAlL,GACJ,OAAOjC,EAAAC,EAAAC,cAACkO,EAADtJ,OAAAwI,OAAA,GACArL,EADA,CAGHgE,SAAUwB,EAAK1G,MAAMkF,SACrBkC,WAAYV,EAAKU,iBAI7BnI,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOE,KAAK,4BACRC,OAAQ,SAAAlL,GACJ,OAAOjC,EAAAC,EAAAC,cAACmO,EAADvJ,OAAAwI,OAAA,GACArL,EADA,CAGHoG,MAAOZ,EAAK1G,MAAMsH,MAClBpC,SAAUwB,EAAK1G,MAAMkF,SACrBoD,QAAS5B,EAAK4B,cAI1BrJ,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOE,KAAK,4BACRC,OAAQ,SAAAlL,GACJ,OAAOjC,EAAAC,EAAAC,cAACoO,EAADxJ,OAAAwI,OAAA,GACArL,EADA,CAGHsH,MAAO9B,EAAK1G,MAAMwI,MAClBU,QAASxC,EAAKwC,cAI1BjK,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,OAAQ,SAAClL,GACxC,OAAIwF,EAAKsF,kBACE/M,EAAAC,EAAAC,cAACqO,EAADzJ,OAAAwI,OAAA,GACArL,EADA,CAGHoG,MAAOZ,EAAK1G,MAAMsH,MAClBpC,SAAUwB,EAAK1G,MAAMkF,SACrBsD,MAAO9B,EAAK1G,MAAMwI,MAClBe,SAAU7C,EAAK6C,YAGZtK,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAUnG,GAAG,sBAjSbhG,aAyShB2N,cAAWtD,2BCzTLuD,qKACnB,WACE,OAEEzO,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KACIzC,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAAKtO,UAAU,UACbJ,EAAAC,EAAAC,cAACyO,EAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAASrO,KAAK,KAAIP,EAAAC,EAAAC,cAAA,wBAEpBF,EAAAC,EAAAC,cAACyO,EAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAASrO,KAAK,UAASP,EAAAC,EAAAC,cAAA,yBAEzBF,EAAAC,EAAAC,cAACyO,EAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAASrO,KAAK,aAAYP,EAAAC,EAAAC,cAAA,4BAE5BF,EAAAC,EAAAC,cAACyO,EAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAASrO,KAAK,kBAAiBP,EAAAC,EAAAC,cAAA,iCAEjCF,EAAAC,EAAAC,cAACyO,EAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAASrO,KAAK,UAASP,EAAAC,EAAAC,cAAA,kCAnBG2O,IAAMhO,YCDzBiO,8JACjB,WACI,OACI9O,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KACIzC,EAAAC,EAAAC,cAAC6O,EAAD,MACA/O,EAAAC,EAAAC,cAAC8O,EAAD,cALqBnO,aCGrCoO,IAAS9B,OACLnN,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACI5G,EAAAC,EAAAC,cAACgP,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.091e1d92.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonGroup } from 'reactstrap';\r\nimport { Jumbotron, Button } from 'reactstrap';\r\n\r\nimport './home.css'\r\n\r\nexport default class Home extends Component {\r\n\r\n    render() {\r\n        return(\r\n          \r\n            <div>\r\n            <Jumbotron className=\"jumbotron\">\r\n              <h1 className=\"display-3\">Leadox</h1>\r\n              <p className=\"lead\">Welcome to Leadox. A means to create leads, opportunities, and sales with ease.</p>\r\n              <hr className=\"my-2\" />\r\n\r\n              <br></br>\r\n\r\n              <div>\r\n              </div>\r\n              <Button tag=\"a\" href=\"/register\" className=\"registerButton\" color=\"success\" size=\"lg\">Register</Button>{' '} \r\n              <Button tag=\"a\" href=\"/login\" color=\"success\" className=\"loginBtn\" size=\"lg\">Login</Button>{' '}\r\n              <Button color=\"success\" size=\"lg\" className=\"logoutBtn\" onClick={() => sessionStorage.clear(\"userId\")}>Logout</Button>{' '}\r\n            </Jumbotron>     \r\n          </div>\r\n\r\n          \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Input } from 'reactstrap';\r\n\r\nimport './register.css'\r\n\r\nexport default class Register extends Component {\r\n\r\n    state = {\r\n        user_name: \"\",\r\n        user_email: \"\",\r\n        user_password: \"\"\r\n    }\r\n\r\n    handleFieldChange = evt => {\r\n        const stateToChange = {};\r\n        stateToChange[evt.target.id] = evt.target.value\r\n        console.log(stateToChange)\r\n        this.setState(stateToChange)\r\n    }\r\n\r\n    handleRegister = evt => {\r\n\r\n        const newUser = {\r\n            user_name: this.state.user_name,\r\n            email: this.state.user_email,\r\n            password: this.state.user_password,\r\n        }\r\n\r\n        this.props.addUser(newUser)\r\n            .then(() => this.props.history.push(\"/\"))\r\n\r\n            sessionStorage.setItem(this.state.user_name, this.state.user_password)\r\n\r\n            alert(`${this.state.user_name}, Thank you for registering with Leadox!`)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n            \r\n            <div className=\"pleaseRegister\">\r\n            <h2>Please Register</h2>\r\n            </div>\r\n\r\n            <br></br>\r\n\r\n            <form className=\"registerUserForm\">\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        required\r\n                        className=\"newUserForm\"\r\n                        onChange={this.handleFieldChange}\r\n                        id=\"user_name\"\r\n                        placeholder=\"New User Name\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        required\r\n                        className=\"newUserEmail\"\r\n                        onChange={this.handleFieldChange}\r\n                        id=\"user_email\"\r\n                        placeholder=\"New User Email\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        required\r\n                        className=\"newUserPassword\"\r\n                        onChange={this.handleFieldChange}\r\n                        id=\"user_password\"\r\n                        placeholder=\"New User Password\"\r\n                    />\r\n                </div>\r\n\r\n                <Button type=\"button\" onClick={this.handleRegister} className=\"addNewUserBtn\" color=\"success\" size=\"lg\">Register</Button>\r\n\r\n            </form>\r\n\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { Input } from 'reactstrap';\r\n\r\nimport './login.css'\r\n\r\nexport default class Login extends Component {\r\n\r\n    state = {\r\n        \r\n        user_name: \"\",\r\n        password: \"\"\r\n\r\n    }\r\n\r\n    handleFieldChange = evt => {\r\n        const stateToChange = {};\r\n        stateToChange[evt.target.id] = evt.target.value\r\n        console.log(stateToChange)\r\n        this.setState(stateToChange)\r\n    }\r\n\r\n    handleLogin = (evt) => {\r\n\r\n        let allUsers = this.props.users\r\n        let inputUserName = this.state.user_name\r\n        let inputPassword = this.state.password\r\n\r\n        let matchUser = allUsers.find(user => user.user_name === inputUserName && user.password === inputPassword)\r\n        console.log(this.state.user_name)\r\n        evt.preventDefault()\r\n\r\n        if (this.state.user_name | this.state.password === \"\") {\r\n            window.alert(\"Please sign in.\")\r\n        }\r\n        else if (!matchUser) {\r\n            window.alert(\"User not found.\")\r\n        } else {\r\n            sessionStorage.setItem(\r\n                \"userId\",\r\n                matchUser.id\r\n            )\r\n        } if (matchUser) {\r\n            this.props.history.push(\"/\")\r\n            window.alert(`Welcome back ${matchUser.user_name}!`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"loginWelcome\">\r\n                    <h1 className=\"loginWelcome\">Welcome to Leadox.</h1>\r\n                </div>\r\n\r\n                    <br></br>\r\n        \r\n        <div className=\"pleaseLogin\">\r\n        <p>Please login to continue.</p>\r\n            </div>\r\n        <form className=\"login-form-group\">\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        required\r\n                        className=\"loginUserNameForm\"\r\n                        onChange={this.handleFieldChange}\r\n                        id=\"user_name\"\r\n                        placeholder=\"Enter User Name\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        required\r\n                        className=\"loginPasswordForm\"\r\n                        onChange={this.handleFieldChange}\r\n                        id=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                    />\r\n                </div>\r\n\r\n            <Button type=\"submit\" className=\"loginSubmit\" onClick={this.handleLogin} color=\"success\" size=\"lg\">Login\r\n            </Button>\r\n\r\n      </form>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}","const remoteURL = \"http://localhost:5002\"\r\n\r\nexport default {\r\n\r\n    getUser(id) {\r\n        return fetch(`${remoteURL}/users/${id}`).then(e => e.json())\r\n    },\r\n\r\n    getProduct(id) {\r\n        return fetch(`${remoteURL}/products/${id}`).then(e => e.json())\r\n    },\r\n\r\n    getLead(id) {\r\n        return fetch(`${remoteURL}/leads/${id}`).then(e => e.json())\r\n    },\r\n\r\n    getSale(id) {\r\n        return fetch(`${remoteURL}/sales/${id}`).then (e => e.json())\r\n    },\r\n\r\n    getAllUsers: () => {\r\n        return fetch(`${remoteURL}/users`).then(e => e.json())\r\n    },\r\n\r\n    getAllProducts() {\r\n        return fetch(`${remoteURL}/products`).then(e => e.json())\r\n    },\r\n\r\n    getAllLeads() {\r\n        return fetch(`${remoteURL}/leads`).then(e => e.json())\r\n    },\r\n\r\n    getUserProducts() {\r\n        return fetch(`${remoteURL}/userProducts`).then(e => e.json())\r\n    },\r\n\r\n    getAllPurchases() {\r\n        return fetch(`${remoteURL}/purchases`).then(e => e.json())\r\n    },\r\n\r\n    getAllSales() {\r\n        return fetch (`${remoteURL}/sales`).then(e => e.json()) \r\n    },\r\n    \r\n    getUserPurchases() {\r\n        let sessionId = sessionStorage.getItem(\"userId\")\r\n        return fetch(`${remoteURL}/purchases?userId=${sessionId}`).then(e => e.json())\r\n    },\r\n\r\n    getUserProducts() {\r\n        let sessionId = sessionStorage.getItem(\"userId\")\r\n        return fetch(`${remoteURL}/products?userId=${sessionId}`).then(e => e.json())\r\n    },\r\n\r\n    getUserLeads() {\r\n        let sessionId = sessionStorage.getItem(\"userId\")\r\n        return fetch(`${remoteURL}/leads?userId=${sessionId}`).then(e => e.json())\r\n    },\r\n\r\n    getUserSales() {\r\n        let sessionId = sessionStorage.getItem(\"userId\")\r\n        return fetch(`${remoteURL}/sales?userId=${sessionId}`).then(e => e.json())\r\n    },\r\n    \r\n    getUserDriveTickets() {\r\n        let sessionId = sessionStorage.getItem(\"userId\")\r\n        return fetch(`${remoteURL}/probabilityDriveTickets?userId=${sessionId}`).then(e => e.json())\r\n    },\r\n\r\n    getUserPurchaseTickets() {\r\n        let sessionId = sessionStorage.getItem(\"userId\")\r\n        return fetch(`${remoteURL}/purchaseTickets?userId=${sessionId}`).then(e => e.json())\r\n    },\r\n\r\n    getUserSales() {\r\n        let sessionId = sessionStorage.getItem(\"userId\")\r\n        return fetch(`${remoteURL}/sales?userId=${sessionId}`).then(e => e.json())\r\n    },\r\n\r\n    postNewUser(newUser) {\r\n        return fetch(`${remoteURL}/users`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(newUser)\r\n        }).then(e => e.json())\r\n    },\r\n\r\n    postNewProduct(newProduct) {\r\n        return fetch(`${remoteURL}/products`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(newProduct)\r\n        }).then(e => e.json())\r\n    },\r\n\r\n    postNewLead(newLead) {\r\n        return fetch(`${remoteURL}/leads`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(newLead)\r\n        }).then(e => e.json())\r\n    },\r\n\r\n    postNewPurchaseTicket(newPurchaseTicket) {\r\n        return fetch(`${remoteURL}/purchaseTickets`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(newPurchaseTicket)\r\n        }).then(e => e.json())\r\n    },\r\n\r\n    postNewSale(newSale) {\r\n        return fetch(`${remoteURL}/sales`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(newSale)\r\n        }).then(e => e.json())\r\n    },\r\n\r\n    putProduct(editedProduct) {\r\n        return fetch(`${remoteURL}/products/${editedProduct.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(editedProduct)\r\n        }).then(e => e.json())\r\n    },\r\n\r\n    putLead(editedLead) {\r\n        return fetch(`${remoteURL}/leads/${editedLead.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(editedLead)\r\n        }).then(e => e.json())\r\n    },\r\n\r\n    putPurchase(editedPurchase) {\r\n\r\n        return fetch(`${remoteURL}/purchases/${editedPurchase.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(editedPurchase)\r\n        }).then(e => e.json())\r\n    },\r\n\r\n    putDriveTicket(editedDriveTicket) {\r\n\r\n        return fetch(`${remoteURL}/probabilityDriveTickets/${editedDriveTicket.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(editedDriveTicket)\r\n        }).then(e => e.json())\r\n    },\r\n\r\n    putSale(editedSale) {\r\n\r\n        return fetch(`${remoteURL}/sales/${editedSale.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(editedSale)\r\n        }).then(e => e.json())\r\n    },\r\n\r\n    deleteProduct(id) {\r\n        return fetch(`${remoteURL}/products/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then(e => e.json(0))\r\n    },\r\n\r\n    deleteLead(id) {\r\n        return fetch(`${remoteURL}/leads/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then(e => e.json(0))\r\n    },\r\n\r\n    deleteUserProduct(id) {\r\n        return fetch(`${remoteURL}/userProducts/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then(e => e.json(0))\r\n    },\r\n\r\n    deleteDriveTicket(id) {\r\n        return fetch(`${remoteURL}/probabilityDriveTickets/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then(e => e.json(0))    \r\n    },\r\n\r\n    deleteSale(id) {\r\n        return fetch(`${remoteURL}/sales/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then(e => e.json(0))    \r\n    },\r\n\r\n    deletePurchase(id) {\r\n        return fetch(`${remoteURL}/purchases/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then(e => e.json())\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\n\r\nimport './products.css'\r\n\r\n\r\n\r\nexport default class ProductList extends Component {\r\n\r\n\r\n    \r\n    handleClick = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.products)\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n            <div>\r\n                <section className=\"products\">\r\n                    <div className=\"productsHeader\">\r\n                    <h1 className=\"productsHeader\">Products Available</h1>\r\n                </div> \r\n                    {\r\n                        this.props.products.map(product =>\r\n                            <div key={product.id}>\r\n                <Card body inverse className=\"productListCard\" style={{ backgroundColor: '#0f52ba', borderColor: '#333' }}>\r\n                    <CardTitle><h3>{product.productName}</h3></CardTitle>\r\n\r\n                    <br></br>\r\n\r\n                    <Link to={`/products/${product.id}/details`}>\r\n                        <Button className=\"productDetailsBtn\" color=\"success\" size=\"sm\">Details</Button>\r\n                        </Link>\r\n                        </Card>\r\n                            </div>\r\n                        )}\r\n                    <Link to={`/products/new`}>\r\n                        <Button className=\"addNewProductButton\" color=\"success\">Create a New Product</Button>\r\n                        </Link>\r\n                </section>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from 'reactstrap';\r\nimport { Input } from 'reactstrap';\r\n\r\nexport default class NewProductForm extends Component {\r\n\r\n    state = {\r\n        userId: \"\",\r\n        productName: \"\",\r\n        productPrice: \"\",\r\n        productVendor: \"\",\r\n        productDescription: \"\"\r\n    }\r\n\r\n    handleFieldChange = evt => {\r\n        const stateToChange = {};\r\n        stateToChange[evt.target.id] = evt.target.value\r\n        this.setState(stateToChange)\r\n    }\r\n\r\n    constructNewProduct = () => {\r\n        let userId = sessionStorage.getItem(\"userId\")\r\n        const newProduct = {\r\n            userId: parseInt(userId),\r\n            productName: this.state.productName,\r\n            productPrice: this.state.productPrice,\r\n            productVendor: this.state.productVendor,\r\n            productDescription: this.state.productDescription\r\n        }\r\n\r\n        this.props.addProducts(newProduct)\r\n            .then(() => this.props.history.push(\"/products\"))\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n            <div className=\"createProduct\">\r\n                <h2>Create a new Product</h2>\r\n                </div>\r\n\r\n                 <form className=\"productForm\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Product Name\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"productNameForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"productName\"\r\n                            placeholder=\"Name\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Product Price\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"productPriceForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"productPrice\"\r\n                            placeholder=\"Price\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Product Vendor\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"productVendorForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"productVendor\"\r\n                            placeholder=\"Vendor\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Product Description\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"productDescriptionForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"productDescription\"\r\n                            placeholder=\"Description\"\r\n                        />\r\n                    </div>\r\n\r\n                    <br></br>\r\n            \r\n                    <Button color=\"success\" type=\"button\" onClick={this.constructNewProduct} className=\"addProductBtn\">Submit</Button>\r\n                </form>\r\n\r\n             </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport DbCalls from '../../modules/dbCalls'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Button, Card, CardText, CardBody,\r\n    CardTitle,\r\n} from 'reactstrap';\r\n\r\nimport './productDetails.css'\r\n\r\nexport default class ProductDetails extends Component {\r\n\r\n    state = {\r\n        productId: \"\",\r\n        productName: \"\",\r\n        productPrice: \"\",\r\n        productVendor: \"\",\r\n        productDescription: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        DbCalls.getProduct(this.props.match.params.productId)\r\n            .then(product => {\r\n                this.setState({\r\n                    productId: product.id,\r\n                    productName: product.productName,\r\n                    productPrice: product.productPrice,\r\n                    productVendor: product.productVendor,\r\n                    productDescription: product.productDescription\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card body inverse className=\"productListCard\" style={{ backgroundColor: '#333', borderColor: '#333' }}>\r\n                    <CardBody>\r\n                        <CardTitle>\r\n                            <h2>{this.state.productName}</h2>\r\n                        </CardTitle>\r\n                        <CardText>\r\n                            <p>Price: {this.state.productPrice}</p>\r\n                            <p>Vendor: {this.state.productVendor}</p>\r\n                            <p>Description: {this.state.productDescription}</p>\r\n                        </CardText>\r\n\r\n                        <Link to={`/products/${this.state.productId}/edit`}>\r\n                            <Button color=\"success\" size=\"sm\" className=\"editProductBtn\">Edit</Button>\r\n                        </Link>\r\n                        <Link to={`/products`}>\r\n                        <Button color=\"success\" size=\"sm\" className=\"deleteProductBtn\" onClick={() =>\r\n                            this.props.deleteProduct(this.state.productId)} className=\"deleteProductBtn\">\r\n                            Delete\r\n                            </Button>\r\n                            </Link>\r\n                         \r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport DbCalls from '../../modules/dbCalls';\r\nimport { Button } from 'reactstrap';\r\nimport { Input } from 'reactstrap';\r\n\r\nimport './products.css'\r\n\r\nexport default class ProductEditForm extends Component {\r\n\r\n    state = {\r\n        userId: \"\",\r\n        productName: \"\",\r\n        productPrice: \"\",\r\n        productVendor: \"\",\r\n        productDescription: \"\"\r\n    }\r\n\r\n    handleFieldChange = evt => {\r\n        const stateToChange = {};\r\n        stateToChange[evt.target.id] = evt.target.value\r\n        this.setState(stateToChange)\r\n    }\r\n\r\n    updateExistingProduct = evt => {\r\n        evt.preventDefault()\r\n\r\n        const editedProduct = {\r\n            id: this.props.match.params.productId,\r\n            userId: this.state.userId,\r\n            productName: this.state.productName,\r\n            productPrice: this.state.productPrice,\r\n            productVendor: this.state.productVendor,\r\n            productDescription: this.state.productDescription\r\n        }\r\n        this.props.putProduct(editedProduct)\r\n            .then(() => this.props.history.push(\"/products\"))\r\n    }\r\n\r\n    componentDidMount() {\r\n        DbCalls.getProduct(this.props.match.params.productId)\r\n            .then(product => {\r\n                this.setState({\r\n                    userId: product.userId,\r\n                    productName: product.productName,\r\n                    productPrice: product.productPrice,\r\n                    productVendor: product.productVendor,\r\n                    productDescription: product.productDescription\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n            <div className=\"editProduct\">\r\n                <h2>Edit your Product</h2>\r\n                </div>\r\n\r\n                <form className=\"productEditForm\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Product Name\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"productEditNameForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"productName\"\r\n                            value={this.state.productName}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Product Price\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"productEditPriceForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"productPrice\"\r\n                            value={this.state.productPrice}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Product Vendor\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"productEditVendorForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"productVendor\"\r\n                            value={this.state.productVendor}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Product Description\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"productEditDescriptionForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"productDescription\"\r\n                            value={this.state.productDescription}\r\n                        />\r\n                    </div>\r\n\r\n                    <Button className=\"editProductBtn\" color=\"success\" type=\"submit\"\r\n                        onClick={(evt) => this.updateExistingProduct(evt)}\r\n                        className=\"editProductBtn\">Save Edit\r\n                    </Button>\r\n                </form>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Button, CardTitle } from 'reactstrap';\r\n\r\nimport './leads.css'\r\n\r\nexport default class LeadList extends Component {\r\n    \r\n    handleClick = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n            <div>\r\n                <section className=\"leads\">\r\n                <div className=\"leadsHeader\">\r\n                <h1 className=\"leadsHeader\">Qualified Leads</h1>\r\n                </div>\r\n                    {\r\n                        this.props.leads.map(lead =>\r\n                            <div key={lead.id}>\r\n                                <Card body inverse className=\"leadsListCard\" style={{ backgroundColor: '#0f52ba', borderColor: '#333' }}>\r\n                                    <CardTitle><h3>{lead.first_name} {lead.last_name}</h3></CardTitle>\r\n\r\n                                        <br></br>\r\n\r\n                    <Link to={`/leads/${lead.id}/details`}>\r\n                    <Button className=\"productDetailsBtn\" color=\"success\" size=\"sm\">\r\n                            Details\r\n                        </Button>\r\n                        </Link>\r\n                    </Card>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    <br></br>\r\n\r\n                    <Link to={`/leads/new`}>\r\n                    <Button className=\"addNewLead\" color=\"success\">Create a New Lead</Button>\r\n                    </Link>\r\n\r\n                </section>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from 'reactstrap';\r\nimport { Input } from 'reactstrap';\r\n\r\nimport './leads.css'\r\n\r\nexport default class NewLeadForm extends Component {\r\n\r\n    state = {\r\n        userId: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email_address: \"\",\r\n        phone_number: \"\",\r\n        lead_address: \"\"\r\n    }\r\n\r\n    handleFieldChange = evt => {\r\n        const stateToChange = {};\r\n        stateToChange[evt.target.id] = evt.target.value\r\n        this.setState(stateToChange)\r\n    }\r\n\r\n    constructNewLead = () => {\r\n        let userId = sessionStorage.getItem(\"userId\")\r\n        const newLead = {\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email_address: this.state.email_address,\r\n            phone_number: this.state.phone_number,\r\n            lead_address: this.state.lead_address,\r\n            userId: parseInt(userId)\r\n        }\r\n\r\n        this.props.addLeads(newLead)\r\n            .then(() => this.props.history.push(\"/leads\"))\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n            <div className=\"createQualifiedLead\">\r\n                <h2>Create a new Lead</h2>\r\n                </div>\r\n\r\n                 <form className=\"productForm\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"leadFirstName\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"leadFirstNameForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"first_name\"\r\n                            placeholder=\"First Name\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"leadLastName\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"leadLastNameForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"last_name\"\r\n                            placeholder=\"Last Name\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"leadEmailAddress\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"leadEmailAddressForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"email_address\"\r\n                            placeholder=\"Email Address\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"leadPhoneNumber\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"leadPhoneNumberForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"phone_number\"\r\n                            placeholder=\"Phone Number\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"leadAddress\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"leadAddressForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"lead_address\"\r\n                            placeholder=\"Lead Address\"\r\n                        />\r\n                    </div>\r\n\r\n                    <br></br>\r\n\r\n                    <Button type=\"button\" color=\"success\" onClick={this.constructNewLead} className=\"addLeadBtn\">Submit</Button>\r\n                </form>\r\n             </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport DbCalls from '../../modules/dbCalls'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Button, Card, CardText, CardBody,\r\n    CardTitle,\r\n} from 'reactstrap';\r\nimport { ButtonGroup } from 'reactstrap';\r\n\r\nimport './leadDetails.css'\r\n\r\nexport default class LeadDetails extends Component {\r\n\r\n    state = {\r\n        leadId: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email_address: \"\",\r\n        lead_address: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        DbCalls.getLead(this.props.match.params.leadId)\r\n            .then(lead => {\r\n                this.setState({\r\n                    leadId: lead.id,\r\n                    first_name: lead.first_name,\r\n                    last_name: lead.last_name,\r\n                    email_address: lead.email_address,\r\n                    phone_number: lead.phone_number,\r\n                    lead_address: lead.lead_address,\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card body inverse className=\"productListCard\" style={{ backgroundColor: '#333', borderColor: '#333' }}>\r\n                    <CardBody>\r\n                        <CardTitle>\r\n                            <h2>{this.state.first_name} {this.state.last_name}</h2>\r\n                        </CardTitle>\r\n                        <CardText>\r\n                            <p>Email: {this.state.email_address}</p>\r\n                        </CardText>\r\n                        <CardText>\r\n                            <p>Phone: {this.state.phone_number}</p>\r\n                        </CardText>\r\n                        <CardText>\r\n                            <p>Address: {this.state.lead_address}</p>\r\n                        </CardText>\r\n\r\n                        <ButtonGroup>\r\n                        <Link to={`/leads/${this.state.leadId}/edit`}>\r\n                            <Button color=\"success\" size=\"sm\" className=\"editLeadBtn\">Edit</Button>\r\n                        </Link>\r\n                        <Link to={`/leads`}>\r\n                        <Button color=\"success\" size=\"sm\" className=\"deleteLeadBtn\" onClick={() =>\r\n                            this.props.deleteLead(this.state.leadId)} className=\"deleteProductBtn\">\r\n                            Delete\r\n                            </Button>\r\n                            </Link>\r\n                            </ButtonGroup> \r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport DbCalls from '../../modules/dbCalls';\r\nimport { Button } from 'reactstrap';\r\nimport { Input } from 'reactstrap';\r\n\r\nimport './leads.css'\r\n\r\nexport default class LeadEditForm extends Component {\r\n\r\n    state = {\r\n        userId: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email_address: \"\",\r\n        phone_number: \"\",\r\n        lead_address: \"\"\r\n    }\r\n\r\n    handleFieldChange = evt => {\r\n        const stateToChange = {};\r\n        stateToChange[evt.target.id] = evt.target.value\r\n        this.setState(stateToChange)\r\n    }\r\n\r\n    updateExistingLead = evt => {\r\n        evt.preventDefault()\r\n\r\n        const editedLead = {\r\n            id: this.props.match.params.leadId,\r\n            userId: this.state.userId,\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email_address: this.state.email_address,\r\n            phone_number: this.state.phone_number,\r\n            lead_address: this.state.lead_address\r\n        }\r\n        this.props.putLead(editedLead)\r\n            .then(() => this.props.history.push(\"/leads\"))\r\n    }\r\n\r\n    componentDidMount() {\r\n        DbCalls.getLead(this.props.match.params.leadId)\r\n            .then(lead => {\r\n                this.setState({\r\n                    userId: lead.userId,\r\n                    first_name: lead.first_name,\r\n                    last_name: lead.last_name,\r\n                    email_address: lead.email_address,\r\n                    phone_number: lead.phone_number,\r\n                    lead_address: lead.lead_address\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <React.Fragment>\r\n\r\n        <div className=\"editLead\">\r\n            <h2>Edit your Lead</h2>\r\n            </div>\r\n\r\n        <form className=\"leadEditForm\">\r\n            <div className=\"form-group\">\r\n                    <label htmlFor=\"FirstName\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"leadEditFirstNameForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"first_name\"\r\n                            value={this.state.first_name}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"LastName\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"leadEditLastNameForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"last_name\"\r\n                            value={this.state.last_name}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"EmailAddress\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"leadEditEmailAddressForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"email_address\"\r\n                            value={this.state.email_address}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"PhoneNumber\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"leadEditPhoneNumberForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"phone_number\"\r\n                            value={this.state.phone_number}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"LeadAddress\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"leadEditAddressForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"lead_address\"\r\n                            value={this.state.lead_address}\r\n                        />\r\n                    </div>\r\n\r\n                    <Button className=\"editLeadBtn\" color=\"success\" type=\"submit\"\r\n                        onClick={(evt) => this.updateExistingLead(evt)}\r\n                        className=\"editLeadBtn\">Save Edit</Button>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\n\r\nimport './sales.css'\r\n\r\nexport default class SalesList extends Component {\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"clicked link\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <React.Fragment>\r\n            <div>\r\n                <section className=\"salesList\">\r\n                    <h1 className=\"salesHeader\">Sales</h1>\r\n                    {\r\n                        this.props.sales.map(sale =>\r\n                            <div key={sale.id}>\r\n\r\n                        <Card body inverse className=\"salesCard\" style={{ backgroundColor: '#0f52ba', borderColor: '#333' }}>\r\n                            <CardTitle>\r\n                                <CardText><h2>{sale.selectedLead} purchased ~</h2></CardText>\r\n                                <CardText><h3>{sale.selectedProduct}</h3></CardText>\r\n\r\n                                        <br></br>\r\n\r\n                            </CardTitle>\r\n                                    <Link to={`/sales/${sale.id}/details`}>\r\n                        <Button className=\"purchaseDetailsBtn\" color=\"success\" size=\"sm\">\r\n                            Details\r\n                        </Button>\r\n                        </Link>\r\n                        </Card>\r\n\r\n                            </div>\r\n                        )}\r\n                    </section>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport DbCalls from '../../modules/dbCalls'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, CardText, CardBody, CardTitle, Button, } from 'reactstrap';\r\n\r\nimport './sales.css'\r\n\r\n\r\nexport default class SalesDetails extends Component {\r\n\r\n    state = {\r\n        saleId: \"\",\r\n        selectedLead: \"\",\r\n        selectedProduct: \"\",\r\n        saleTime: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        DbCalls.getSale(this.props.match.params.saleId)\r\n            .then(sale => {\r\n                this.setState({\r\n                    saleId: sale.id,\r\n                    selectedLead: sale.selectedLead,\r\n                    selectedProduct: sale.selectedProduct,\r\n                    saleTime: sale.saleTime\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                \r\n            <div>\r\n                    <Card body inverse className=\"salesDetailsCard\" style={{ backgroundColor: '#333', borderColor: '#333' }}>\r\n                    <CardBody>\r\n                        <CardTitle>\r\n                            <p>Name: {this.state.selectedLead}</p>\r\n                            <p>Product: {this.state.selectedProduct}</p>\r\n                            <p>Timestamp: {this.state.saleTime}</p>\r\n                        </CardTitle>\r\n                        <Link to={`/sales/${this.state.saleId}/edit`}>\r\n                            <Button color=\"success\" size=\"sm\" className=\"editSaleBtn\">Edit</Button>\r\n                        </Link>\r\n                        <Link to=\"/sales\">\r\n                        <Button color=\"success\" size=\"sm\" onClick={() =>\r\n                            this.props.deleteSale(this.state.saleId)} className=\"deleteSaleBtn\">Delete\r\n                            </Button>\r\n                            </Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        \r\n        </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport DbCalls from '../../modules/dbCalls';\r\nimport { Button } from 'reactstrap';\r\nimport { Input } from 'reactstrap';\r\n\r\nimport './sales.css'\r\n\r\nexport default class SalesEditForm extends Component {\r\n\r\n    state = {\r\n        saleId: \"\",\r\n        selectedLead: \"\",\r\n        selectedProduct: \"\"\r\n    }\r\n\r\n    handleFieldChange = evt => {\r\n        const stateToChange = {};\r\n        stateToChange[evt.target.id] = evt.target.value\r\n        console.log(stateToChange)\r\n        this.setState(stateToChange)\r\n    }\r\n\r\n    updateExistingSale = evt => {\r\n        evt.preventDefault()\r\n\r\n        let userId = sessionStorage.getItem(\"userId\")\r\n\r\n        const editedSale = {\r\n            id: this.props.match.params.saleId,\r\n            selectedLead: this.state.selectedLead,\r\n            selectedProduct: this.state.selectedProduct,\r\n            userId: parseInt(userId),\r\n            saleTime: this.state.saleTime\r\n        }\r\n\r\n        this.props.putSale(editedSale)\r\n            .then(() => this.props.history.push(\"/sales\"))\r\n    }\r\n\r\n    componentDidMount() {\r\n        DbCalls.getSale(this.props.match.params.saleId)\r\n            .then(sale => {\r\n                this.setState({\r\n                    saleId: sale.id,\r\n                    selectedLead: sale.selectedLead,\r\n                    selectedProduct: sale.selectedProduct,\r\n                    saleTime: sale.saleTime\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n            <div className=\"editSale\">\r\n                <h2>Edit your Sale</h2>\r\n                </div>\r\n\r\n                <form className=\"editSaleForm\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"editSaleNameForm\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"editSaleNameForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"selectedLead\"\r\n                            value={this.state.selectedLead}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"editSaleProductForm\"></label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"editSaleProductForm\"\r\n                            onChange={this.handleFieldChange}\r\n                            id=\"selectedProduct\"\r\n                            value={this.state.selectedProduct}\r\n                        />\r\n                    </div>\r\n\r\n                    <Button className=\"editSaleBtn\" color=\"success\" type=\"submit\"\r\n                        onClick={(evt) => this.updateExistingSale(evt)}\r\n                    >Save Edit\r\n                </Button>\r\n                </form>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, CardText, CardTitle, CardBody} from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nimport './opportunities.css'\r\n\r\nexport default class Opportunities extends Component {\r\n\r\n    state = {\r\n        userId: [],\r\n        products: [],\r\n        leads: [],\r\n        sales: [],\r\n        selectedProduct: \"\",\r\n        selectedProductPrice: \"\",\r\n        selectedLead: \"\",\r\n        saleTime: \"\"\r\n    }\r\n\r\n    getDate() {\r\n      var now = new Date();\r\n      var moment = now.toLocaleString()\r\n      return(moment);\r\n  }\r\n\r\n    componentDidMount() {\r\n        const remoteURL = \"http://localhost:5002\"\r\n        let sessionId = sessionStorage.getItem(\"userId\")\r\n     \r\n      fetch(\r\n        `${remoteURL}/leads?userId=${sessionId}`\r\n      )\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          let leadsFromApi = data.map(lead => {\r\n              return { value: lead.first_name + \" \" + lead.last_name, display: lead.first_name + \" \" + lead.last_name };\r\n            });\r\n            this.setState({\r\n              leads: [\r\n                {\r\n                  value: \"\",\r\n                  display:\r\n                  \"(Select your lead)\"\r\n                }\r\n              ].concat(leadsFromApi)\r\n            });\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n\r\n          fetch(\r\n            `${remoteURL}/products?userId=${sessionId}`\r\n          )\r\n            .then(response => {\r\n              return response.json();\r\n            })\r\n            .then(data => {\r\n              let productsFromApi = data.map(product => {\r\n                  return { value: product.productName, display: product.productName, selectedProductPrice: product.productPrice };\r\n                });\r\n                this.setState({\r\n                  products: [\r\n                    {\r\n                      value: \"\",\r\n                      display:\r\n                      \"(Select your product)\",\r\n                      selectedProductPrice: \"\"\r\n                    }\r\n                  ].concat(productsFromApi)\r\n                });\r\n              })\r\n              .catch(error => {\r\n                console.log(error);\r\n              });\r\n        }\r\n        \r\n        constructNewSale = (evt) => {\r\n          \r\n          let userId = sessionStorage.getItem(\"userId\")\r\n          \r\n          const newSale = {\r\n            id: this.props.match.params.saleId,\r\n            userId: parseInt(userId),\r\n            selectedLead: this.state.selectedLead,\r\n            selectedProduct: this.state.selectedProduct,\r\n            selectedProductPrice: this.state.selectedProductPrice,\r\n            saleTime: this.getDate()\r\n          }\r\n          \r\n          console.log(newSale)\r\n        this.props.addSales(newSale)\r\n        .then(() => this.props.history.push(\"/sales\"))\r\n      }\r\n      \r\n    render() {\r\n      console.log(this.state.products)\r\n        return (\r\n          \r\n          \r\n          <React.Fragment>\r\n            <div>\r\n              <section>\r\n                <h1 className=\"opportunitiesHeader\">Opportunities</h1>\r\n              </section>\r\n            </div>\r\n\r\n        <div>\r\n          <Input className=\"selectLeadInput\" type=\"select\"\r\n            value={this.state.selectedLead}\r\n            onChange={e =>\r\n              this.setState({\r\n                selectedLead: e.target.value,\r\n                validationError:\r\n                  e.target.value === \"\"\r\n                    ? \"You must select a lead\"\r\n                    : \"\"\r\n              })\r\n            }\r\n          >\r\n            {this.state.leads.map(lead => (\r\n              <option\r\n                key={lead.value}\r\n                value={lead.value}\r\n              >\r\n                {lead.display}\r\n              </option>\r\n            ))}\r\n          </Input>\r\n          <div\r\n            style={{\r\n              color: \"red\",\r\n              marginTop: \"5px\"\r\n            }}\r\n          >\r\n            {this.state.validationError}\r\n          </div>\r\n        </div>  \r\n                <div>\r\n            <br></br>\r\n        <div>\r\n          <Input className=\"selectProductInput\" type=\"select\"\r\n            value={this.state.selectedProduct}\r\n            selectedProductPrice={this.state.selectedProductPrice}\r\n            onChange={e =>\r\n              this.setState({\r\n                selectedProduct: e.target.value,\r\n                selectedProductPrice: e.target.selectedProductPrice,\r\n                validationError:\r\n                  e.target.value === \"\"\r\n                    ? \"You must select a product\"\r\n                    : \"\"\r\n              })\r\n            }\r\n          >\r\n            {this.state.products.map(product => (\r\n              <option\r\n                key={product.value}\r\n                value={product.value}\r\n              >\r\n                {product.display}\r\n              </option>\r\n            ))}\r\n          </Input>\r\n          <div\r\n            style={{\r\n              color: \"red\",\r\n              marginTop: \"5px\"\r\n            }}\r\n          >\r\n            {this.state.validationError}\r\n          </div>\r\n        </div>\r\n                    \r\n       \r\n          \r\n          <div className=\"enterOpportunity\">\r\n          <Button type=\"submit\" color=\"success\" className=\"enterOpportunityButton\"\r\n                onClick={() => {\r\n                    this.constructNewSale() \r\n                }}>Enter Details\r\n            </Button>\r\n            </div>\r\n          \r\n                </div>\r\n              \r\n                </React.Fragment>\r\n            )\r\n        }\r\n    \r\n    }\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\nimport Home from './home'\r\nimport Register from './authentication/register'\r\nimport Login from './authentication/login'\r\nimport DbCalls from '../modules/dbCalls'\r\nimport ProductList from './products/productList'\r\nimport NewProductForm from './products/newProductForm'\r\nimport ProductDetails from './products/productDetails'\r\nimport ProductEditForm from './products/productEditForm'\r\nimport LeadList from './leads/leadList'\r\nimport NewLeadForm from './leads/newLeadForm'\r\nimport LeadDetails from './leads/leadDetails'\r\nimport LeadEditForm from './leads/leadEditForm'\r\nimport SalesList from './sales/salesList'\r\nimport SalesDetails from './sales/salesDetails';\r\nimport SalesEditForm from './sales/salesEditForm';\r\nimport Opportunities from './opportunities/opportunities';\r\n\r\n\r\nclass ApplicationViews extends Component {\r\n\r\n    state = {\r\n        users: [],\r\n        products: [],\r\n        leads: [],\r\n        sales: [],\r\n        purchases: []\r\n    };\r\n\r\n    addUser = (user) =>\r\n        DbCalls.postNewUser(user)\r\n            .then(() => DbCalls.getAllUsers())\r\n            .then(users =>\r\n                this.setState({\r\n                    users: users\r\n                }))\r\n\r\n    addProducts = (product) =>\r\n        DbCalls.postNewProduct(product)\r\n            .then(() => DbCalls.getUserProducts())\r\n            .then(products =>\r\n                this.setState({\r\n                    products: products\r\n                }))\r\n\r\n    addLeads = (lead) =>\r\n        DbCalls.postNewLead(lead)\r\n            .then(() => DbCalls.getUserLeads())\r\n            .then(leads =>\r\n                this.setState({\r\n                    leads: leads\r\n                }))\r\n\r\n    addSales = (sale) =>\r\n        DbCalls.postNewSale(sale)\r\n            .then(() => DbCalls.getUserSales())\r\n            .then(sales =>\r\n                this.setState({\r\n                    sales: sales\r\n                }))\r\n\r\n    putProduct = (editedProductObject) => {\r\n        return DbCalls.putProduct(editedProductObject)\r\n            .then(() => DbCalls.getUserProducts())\r\n            .then(products => {\r\n                this.setState({\r\n                    products: products\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    putLead = (editedLeadObject) => {\r\n        return DbCalls.putLead(editedLeadObject)\r\n            .then(() => DbCalls.getUserLeads())\r\n            .then(leads => {\r\n                this.setState({\r\n                    leads: leads\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    putSale = (editedSaleObject) => {\r\n        return DbCalls.putSale(editedSaleObject)\r\n            .then(() => DbCalls.getUserSales())\r\n            .then(sales => {\r\n                this.setState({\r\n                    sales: sales\r\n                })\r\n            })\r\n    }\r\n\r\n    deleteProduct = (product) => {\r\n        const newState = {};\r\n        DbCalls.deleteProduct(product)\r\n            .then(() =>\r\n                DbCalls.getUserProducts()\r\n            )\r\n            .then(products => { newState.products = products })\r\n            .then(() => this.setState(newState))\r\n    }\r\n\r\n    deleteLead = (lead) => {\r\n        const newState = {};\r\n        DbCalls.deleteLead(lead)\r\n            .then(() =>\r\n                DbCalls.getUserLeads()\r\n            )\r\n            .then(leads => { newState.leads = leads })\r\n            .then(() => this.setState(newState))\r\n    }\r\n\r\n    deleteSale = (sale) => {\r\n        const newState = {};\r\n        DbCalls.deleteSale(sale)\r\n            .then(() =>\r\n                DbCalls.getUserSales()\r\n            )\r\n            .then(sales => { newState.sales = sales })\r\n            .then(() => this.setState(newState))\r\n    }\r\n\r\n    fetchAll = async () => {\r\n        this.setState({\r\n            users: await DbCalls.getAllUsers(),\r\n            products: await DbCalls.getUserProducts(),\r\n            leads: await DbCalls.getUserLeads(),\r\n            sales: await DbCalls.getUserSales(),\r\n        })\r\n        // console.log(this.state.users)\r\n        // console.log(this.state.products)\r\n        // console.log(this.state.leads)\r\n        // console.log(this.state.sales)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.fetchAll();\r\n    }\r\n\r\n    isAuthenticated = () => sessionStorage.getItem(\"userId\") !== null\r\n\r\n    render() {\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                <Route exact path=\"/\"\r\n                    render={(props) => {\r\n                        return <Home {\r\n                            ...props\r\n                        }\r\n                        />\r\n                    }}\r\n                />\r\n\r\n                <Route path=\"/login\"\r\n                    render={(props) => {\r\n                        return <Login {\r\n                            ...props\r\n                        }\r\n                            users={this.state.users}\r\n                        />\r\n                    }}\r\n                />\r\n\r\n                <Route path=\"/register\"\r\n                    render={(props) => {\r\n                        return <Register {\r\n                            ...props\r\n                        }\r\n                            users={this.state.users}\r\n                            addUser={this.addUser}\r\n                        />\r\n                    }}\r\n                />\r\n\r\n                <Route exact path=\"/products\" render={(props) => {\r\n                    if (this.isAuthenticated()) {\r\n                        return <ProductList\r\n                            products={this.state.products}\r\n                            addPurchase={this.addPurchase}\r\n                            deleteProduct={this.deleteProduct}\r\n                            deleteUserProduct={this.deleteUserProduct}\r\n                        />\r\n                    } else {\r\n                        return <Redirect to=\"/login\" />\r\n                    }\r\n                }\r\n                } />\r\n\r\n                <Route exact path=\"/leads\" render={(props) => {\r\n                    if (this.isAuthenticated()) {\r\n                        return <LeadList\r\n                            products={this.state.products}\r\n                            leads={this.state.leads}\r\n                            addPurchase={this.addPurchase}\r\n                            deleteProduct={this.deleteProduct}\r\n                            deleteUserProduct={this.deleteUserProduct}\r\n                        />\r\n                    } else {\r\n                        return <Redirect to=\"/login\" />\r\n                    }\r\n                }\r\n                } />\r\n\r\n                <Route exact path=\"/sales\" render={(props) => {\r\n                    if (this.isAuthenticated()) {\r\n                        return <SalesList {...props}\r\n                            \r\n                        sales={this.state.sales}\r\n                        />\r\n                    } else {\r\n                        return <Redirect to=\"/login\" />\r\n                    }\r\n                }\r\n                } />\r\n\r\n                <Route path=\"/products/new\" render={(props) => {\r\n                    return <NewProductForm {...props}\r\n                        addProducts={this.addProducts}\r\n                        products={this.state.products}\r\n                    />\r\n                }} />\r\n\r\n                <Route path=\"/leads/new\" render={(props) => {\r\n                    return <NewLeadForm {...props}\r\n                        addLeads={this.addLeads}\r\n                        leads={this.state.leads}\r\n                    />\r\n                }} />\r\n\r\n                <Route exact path=\"/products/:productId(\\d+)/details\" render={(props) => {\r\n                    return <ProductDetails {\r\n                        ...props\r\n                    }\r\n                        deleteProduct={this.deleteProduct}\r\n                        products={this.state.products}\r\n                        deleteUserProduct={this.deleteUserProduct}\r\n                        userProducts={this.state.userProducts}\r\n                        \r\n                    />\r\n                }} /> \r\n\r\n                <Route exact path=\"/leads/:leadId(\\d+)/details\" render={(props) => {\r\n                    return <LeadDetails {\r\n                        ...props\r\n                    }\r\n                        deleteLead={this.deleteLead}\r\n                        leads={this.state.leads}\r\n                        deleteUserProduct={this.deleteUserProduct}\r\n                        userProducts={this.state.userProducts}\r\n                        \r\n                    />\r\n                }} />\r\n\r\n                    <Route exact path=\"/sales/:saleId(\\d+)/details\" render={(props) => {\r\n                    return <SalesDetails {\r\n                        ...props\r\n                    }\r\n                        deleteSale={this.deleteSale}\r\n                        driveTickets={this.state.driveTickets} \r\n                        sales={this.state.sales}  \r\n                    />\r\n                }} />\r\n\r\n                <Route path=\"/products/:productId(\\d+)/edit\"\r\n                    render={props => {\r\n                        return <ProductEditForm {\r\n                            ...props\r\n                        }\r\n                            products={this.state.products}\r\n                            putProduct={this.putProduct}\r\n                        />\r\n                    }} />\r\n\r\n                <Route path=\"/leads/:leadId(\\d+)/edit\"\r\n                    render={props => {\r\n                        return <LeadEditForm {\r\n                            ...props\r\n                        }\r\n                            leads={this.state.leads}\r\n                            products={this.state.products}\r\n                            putLead={this.putLead}\r\n                        />\r\n                    }} />\r\n\r\n                <Route path=\"/sales/:saleId(\\d+)/edit\"\r\n                    render={props => {\r\n                        return <SalesEditForm {\r\n                            ...props\r\n                        }\r\n                            sales={this.state.sales}\r\n                            putSale={this.putSale}\r\n                        />\r\n                    }} />\r\n\r\n                <Route exact path=\"/opportunities\" render={(props) => {\r\n                    if (this.isAuthenticated()) {\r\n                        return <Opportunities {\r\n                            ...props\r\n                        }\r\n                            leads={this.state.leads}\r\n                            products={this.state.products}\r\n                            sales={this.state.sales}\r\n                            addSales={this.addSales}\r\n                        />\r\n                    } else {\r\n                        return <Redirect to=\"/login\" />\r\n                    }\r\n                    }} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ApplicationViews)","import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport './navigation.css'\r\n\r\nexport default class Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n\r\n      <React.Fragment>\r\n          <Nav className=\"navbar\">\r\n            <NavItem>\r\n              <NavLink href=\"/\"><strong>Home</strong></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/leads\"><strong>Leads</strong></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/products\"><strong>Products</strong></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/opportunities\"><strong>Opportunities</strong></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/sales\"><strong>Sales</strong></NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport ApplicationViews from './applicationViews'\r\nimport Navigation from './navigation/navigation'\r\n\r\nexport default class Project extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navigation />\r\n                <ApplicationViews />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport Project from './components/project';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Project />\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}